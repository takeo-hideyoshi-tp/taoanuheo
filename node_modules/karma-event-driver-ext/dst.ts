/**
 * xxx
 */
function driver(actions:Function):{addDriveTest:Function, iterator:{next:Function}, resolve:Function, reject:Function} {
    actions();
    return {
        addDriveTest: (a:Function):Promise<void> => new Promise<void>((rs)=>rs()),
        iterator: {
            next: (a: any):any => 1
        },
        resolve: (a:any):any => 1,
        reject: (a:any):any => 2
    }
}

var { addDriveTest, iterator, resolve, reject } = driver(() => 1);

addDriveTest(async (browser:Object) => {
    await Promise.resolve();
});

// auto call iterator.next() 

addDriveTest((browser:Object) => {

});

iterator.next();

